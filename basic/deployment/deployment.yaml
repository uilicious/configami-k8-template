##############################################################
#
# {{deploymentKind}} : {{namespace}} / {{name}}
#
##############################################################
---
apiVersion: apps/v1
kind: {{deploymentKind}}
metadata:
  name: {{name}}
  namespace: {{namespace}}
  annotations:
    workload.user.cattle.io/workloadselector: {{deploymentType}}-{{namespace}}-{{name}}
spec:
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: {{deploymentType}}-{{namespace}}-{{name}}
  {{#eq deploymentType "deployment"}}
  replicas: {{scale}}
  {{/eq}}
  {{#eq deploymentType "deployment"}}
  strategy:
    {{#eq deploymentUpdateType "Recreate"}}
    type: {{deploymentUpdateType}}
    {{else}}
    rollingUpdate:
      maxSurge: {{rollingUpdate.maxSurge}}
      maxUnavailable: {{rollingUpdate.maxUnavaliable}}
    type: {{deploymentUpdateType}}
    {{/eq}}
  {{/eq}}
  {{#eq deploymentType "daemonset"}}
  updateStrategy:
    rollingUpdate:
      maxUnavailable: {{rollingUpdate.maxUnavaliable}}
    type: {{updateStrategyType}}
  {{/eq}}
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: {{deploymentType}}-{{namespace}}-{{name}}
        {{#if labels}}
        {{#json2yaml "labels"}}{{/json2yaml}}
        {{/if}}
      {{#if annotations}}
      annotations:
        {{#json2yaml "annotations"}}{{/json2yaml}}
      {{/if}}
    spec:
      {{#if _hasAffinity}}
      affinity:
        {{#if _hasNodeAffinity}}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            {{#if simpleNodeAffinity}}
            - matchExpressions:
              {{#each simpleNodeAffinity}}
              - key: "{{@key}}"
                operator: In
                values:
                - "{{this}}"
              {{/each}}
            {{/if}}
            {{#if customNodeAffinity}}
            {{#json2yaml "customNodeAffinity"}}{{/json2yaml}}
            {{/if}}
        {{/if}}
        {{#if _hasPodAffinity}}
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
            {{#if simplePodAffinity}}
            - matchExpressions:
              {{#each simplePodAffinity}}
              - key: "{{@key}}"
                operator: In
                values:
                - "{{this}}"
              {{/each}}
            {{/if}}
            {{#if customPodAffinity}}
            {{#json2yaml "customPodAffinity"}}{{/json2yaml}}
            {{/if}}
        {{/if}}
      {{/if}}
      {{#if containerTopologySpread.enable}}
      # Enable containerTopologySpread, for better container distribution in the cluster
      topologySpreadConstraints:
      {{#if containerTopologySpread.hostTopology}}
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        {{#eq containerTopologySpread.hostTopology "enforce"}}
        whenUnsatisfiable: DoNotSchedule
        {{else}}
        whenUnsatisfiable: ScheduleAnyway
        {{/eq}}
        labelSelector:
          matchLabels:
            workload.user.cattle.io/workloadselector: {{deploymentType}}-{{namespace}}-{{name}}
      {{/if}}
      {{#if containerTopologySpread.zoneTopology}}
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        {{#eq containerTopologySpread.zoneTopology "enforce"}}
        whenUnsatisfiable: DoNotSchedule
        {{else}}
        whenUnsatisfiable: ScheduleAnyway
        {{/eq}}
        labelSelector:
          matchLabels:
            workload.user.cattle.io/workloadselector: {{deploymentType}}-{{namespace}}-{{name}}
      {{/if}}
      {{/if}}
      {{#if specSecurityContext}}
      securityContext: 
        {{#json2yaml "specSecurityContext"}}{{/json2yaml}}
      {{/if}}
      {{#if specTolerations}}
      tolerations: 
        {{#json2yaml "specTolerations"}}{{/json2yaml}}
      {{/if}}
      {{#if priorityClassName}}
      priorityClassName: {{priorityClassName}}
      {{/if}}
      containers:
      - name: {{name}}
        image: "{{image}}"
        imagePullPolicy: {{imagePullPolicy}}
        {{#if command}}
        command:
        - {{command}}
        {{/if}}
        {{#if commandArgsArray}}
        args:
          {{#json2yaml "commandArgsArray"}}{{/json2yaml}}
        {{/if}}
        {{#if _enviornmentJSON}}
        {{#json2yaml "_enviornmentJSON"}}{{/json2yaml}}
        {{/if}}
        {{#if securityContext}}
        securityContext: 
          {{#json2yaml "securityContext"}}{{/json2yaml}}
        {{/if}}
        {{#if lifecycle}}
        lifecycle:
          {{#json2yaml "lifecycle"}}{{/json2yaml}}
        {{else}}
        {{#if prestopCommandEcho}}
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - echo '### PRE STOP COMMAND STARTED - {{prestopTime_seconds}}s'; sleep {{prestopTime_seconds}}s; kill -SIGTERM 1;
        {{/if}}
        {{/if}}
        resources:
          requests:
            {{#json2yaml "requests"}}{{/json2yaml}}
          limits:
            {{#json2yaml "limits"}}{{/json2yaml}}
        {{#if volumeMounts}}
        volumeMounts:
        {{#json2yaml "volumeMounts"}}{{/json2yaml}}
        {{/if}}
        {{#if portsArray}}
        ports:
          {{#json2yaml "portsArray"}}{{/json2yaml}}
        {{else}}
        {{#if port}}
        ports:
        - containerPort: {{port}}
        {{/if}}
        {{/if}}
        {{#if readinessProbe}}
        readinessProbe:
          {{#json2yaml "readinessProbe"}}{{/json2yaml}}
        {{/if}}
        {{#if livenessProbe}}
        livenessProbe:
          {{#json2yaml "livenessProbe"}}{{/json2yaml}}
        {{/if}}
      {{#if initContainers}}
      initContainers:
        {{#json2yaml "initContainers"}}{{/json2yaml}}
      {{/if}}
      {{#if hostNetwork}}
      hostNetwork: {{hostNetwork}}
      dnsPolicy: ClusterFirstWithHostNet
      {{/if}}
      {{#if serviceAccountName}}
      serviceAccountName: {{serviceAccountName}}
      {{/if}}
      {{#if volumes}}
      volumes:
      {{#json2yaml "volumes"}}{{/json2yaml}}
      {{/if}}
      {{#if imagePullSecrets}}
      imagePullSecrets:
      {{#each imagePullSecrets}}
      - name: {{this}}
      {{/each}}
      {{/if}}
      terminationGracePeriodSeconds: {{add prestopTime_seconds gracePeriod_seconds}}
      restartPolicy: Always
---